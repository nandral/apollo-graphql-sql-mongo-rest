{
  "name": "graphql-server",
  "version": "1.0.0",
  "description": "GraphQL server that connects to multiple backends: a SQL database, a MongoDB database and a REST endpoint.",
  "main": "server.js",
  "dependencies": {
    "apollo-engine": "^0.8.10",
    "apollo-server-express": "^1.3.0",
    "body-parser": "^1.18.2",
    "casual": "^1.5.19",
    "compression": "^1.7.1",
    "express": "^4.16.2",
    "graphql": "^0.11.7",
    "graphql-tools": "^2.13.0",
    "lodash": "^4.17.5",
    "mongoose": "^4.13.11",
    "node-fetch": "^1.7.3",
    "sequelize": "^4.33.4",
    "sqlite": "^2.9.1"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.2",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "chai": "^4.1.2",
    "cross-env": "^5.1.3",
    "mocha": "^3.0.0",
    "nodemon": "^1.14.6",
    "npm-run-all": "^4.1.2",
    "rimraf": "^2.6.2",
    "supertest": "^3.0.0",
    "webpack": "^3.10.0",
    "webpack-node-externals": "^1.6.0"
  },
  "scripts": {
    "start": "npm-run-all --parallel dev:*",
    "dev:server": "cross-env PORT=9000 NODE_ENV=dev nodemon build/bundle.js",
    "dev:build": "webpack --config webpack.config.js --watch",
    "compile": "babel --presets babel-preset-env -d temp-test/ test/",
    "test": "npm run compile && cross-env PORT=3000 NODE_ENV=test mocha -t 10000 --require babel-core/register"
  }
}